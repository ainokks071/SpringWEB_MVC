<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- root-context.xml : ContextLoaderListener에 의해 읽힘. --> 
	
	<!-- 1. db.properties파일(DB 접속정보) 연결! -->
	<!-- 의미 : propertyPlaceholderConfigurer객체(bean) 생성 -> locations에 /WEB-INF/mybatis/db.properties 대입하여 파일연결. 
															: setLocations(value)형태 -->
	<bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="/WEB-INF/mybatis/db.properties" />
	</bean>
	
	<!-- 2. jdbc(dataSource) 연결! ; 위의 db.properties 접속정보내용 가져온다.-->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
	</bean>
	
	
	<!-- 3. Mybatis SQLsessionfactory 생성, config.xml, mapper.xml 해석 ! -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="/WEB-INF/mybatis/config.xml" />
		<property name="mapperLocations" value="classpath:kr/bit/mybatis/*.xml" />
	</bean>
	
	<context:component-scan base-package="kr.bit.model" />
	
</beans>
